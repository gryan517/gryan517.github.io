[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/hello-world/index.html",
    "href": "posts/hello-world/index.html",
    "title": "Hello World!",
    "section": "",
    "text": "Welcome to this blog! Today we learned how to create this fun blog.\nLet’s do some coding.\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(cluster)\n\nset.seed(1234)\n\n\n\n\nCode\nplayers &lt;- read_csv(\"https://dwillis.github.io/sports-data-files/players20.csv\")\n\n\nRows: 5452 Columns: 57\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (8): Team, Player, Class, Pos, Height, Hometown, High School, Summary\ndbl (49): #, Weight, Rk.x, G, GS, MP, FG, FGA, FG%, 2P, 2PA, 2P%, 3P, 3PA, 3...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nplayersselected &lt;- players |&gt;\n  filter(MP&gt;0) |&gt; filter(Pos == \"F\") |&gt;\n  select(Player, Team, Pos, MP, `FG%`, TRB, BLK, TOV, PTS) |&gt;\n  na.omit()\n\n\n\n\nCode\nplayersscaled &lt;- playersselected |&gt;\n  select(MP, `FG%`, TRB, BLK, TOV, PTS) |&gt;\n  mutate_all(scale) |&gt;\n  na.omit()\n\n\n\n\nCode\n# function to compute total within-cluster sum of square\nwss &lt;- function(k) {\n  kmeans(playersscaled, k, nstart = 10 )$tot.withinss\n}\n\n# Compute and plot wss for k = 1 to k = 15\nk.values &lt;- 1:15\n\n# extract wss for 2-15 clusters\nwss_values &lt;- map_dbl(k.values, wss)\n\nplot(k.values, wss_values,\n       type=\"b\", pch = 19, frame = FALSE,\n       xlab=\"Number of clusters K\",\n       ylab=\"Total within-clusters sum of squares\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "jour479xsportsblog",
    "section": "",
    "text": "Big Ten Plays\n\n\n\n\n\n\n\n\n\n\n\n\nOct 10, 2023\n\n\nGab Ryan\n\n\n\n\n\n\n  \n\n\n\n\nHello World!\n\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nGab Ryan\n\n\n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nOct 5, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n  \n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nOct 2, 2023\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/big-ten-cfb-plays/index.html",
    "href": "posts/big-ten-cfb-plays/index.html",
    "title": "Big Ten Plays",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nI’ll need a list of big ten teams the way they appear in the data. But first I’ll need to load the data.\nFilter that data using that list.\nCalculate the average number of offensive plays per team and save that dataframe.\nMake a bar chart of those averages. Then repeat for 2023.\n\n\nCode\nfblogs &lt;- read_csv (\"https://dwillis.github.io/sports-data-files/footballlogs22.csv\")\n\n\nRows: 1672 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (8): HomeAway, Opponent, Result, TeamFull, TeamURL, Outcome, Team, Con...\ndbl  (45): Game, PassingCmp, PassingAtt, PassingPct, PassingYds, PassingTD, ...\ndate  (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\nCode\nfblogs |&gt; filter(Conference == \"Big Ten Conference\")\n\n\n# A tibble: 179 × 54\n    Game Date       HomeAway Opponent    Result PassingCmp PassingAtt PassingPct\n   &lt;dbl&gt; &lt;date&gt;     &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1     1 2022-09-03 &lt;NA&gt;     Colorado S… W (51…         18         28       64.3\n 2     2 2022-09-10 &lt;NA&gt;     Hawaii      W (56…         17         22       77.3\n 3     3 2022-09-17 &lt;NA&gt;     Connecticut W (59…         21         26       80.8\n 4     4 2022-09-24 &lt;NA&gt;     Maryland    W (34…         18         26       69.2\n 5     5 2022-10-01 @        Iowa        W (27…         18         24       75  \n 6     6 2022-10-08 @        Indiana     W (31…         28         36       77.8\n 7     7 2022-10-15 &lt;NA&gt;     Penn State  W (41…         17         24       70.8\n 8     8 2022-10-29 &lt;NA&gt;     Michigan S… W (29…         15         26       57.7\n 9     9 2022-11-05 @        Rutgers     W (52…         13         27       48.1\n10    10 2022-11-12 &lt;NA&gt;     Nebraska    W (34…         10         20       50  \n# ℹ 169 more rows\n# ℹ 46 more variables: PassingYds &lt;dbl&gt;, PassingTD &lt;dbl&gt;, RushingAtt &lt;dbl&gt;,\n#   RushingYds &lt;dbl&gt;, RushingAvg &lt;dbl&gt;, RushingTD &lt;dbl&gt;, OffensivePlays &lt;dbl&gt;,\n#   OffensiveYards &lt;dbl&gt;, OffenseAvg &lt;dbl&gt;, FirstDownPass &lt;dbl&gt;,\n#   FirstDownRush &lt;dbl&gt;, FirstDownPen &lt;dbl&gt;, FirstDownTotal &lt;dbl&gt;,\n#   Penalties &lt;dbl&gt;, PenaltyYds &lt;dbl&gt;, Fumbles &lt;dbl&gt;, Interceptions &lt;dbl&gt;,\n#   TotalTurnovers &lt;dbl&gt;, TeamFull &lt;chr&gt;, TeamURL &lt;chr&gt;, Outcome &lt;chr&gt;, …\n\n\ntest. test."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  }
]